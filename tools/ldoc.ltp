# local iter = ldoc.modules.iter
# local M = ldoc.markup

<h1>Module $(module.name)</h1>

<p>$(M(module.summary))</p>

# for kind, items in module.kinds() do

<h2>$(kind)</h2>
  <dl>
#  for item in items() do ldoc.item = item -- provides context for M()
    <dt><span id="$(item.name)"><code>$(ldoc.display_name(item))</code></span></dt>
    <dd>
      <p>$(item.summary)</p>
#  if item.params and #item.params > 0 then
      $(module.kinds:type_of(item).subnames):
      <dl>
#     for p in iter(item.params) do
        <dt><code>$(p)</code>:</dt>
        <dd>$(M(item.params.map[p]))</dd>
#     end -- for
      </dl>
#   end -- if params
#   if item.ret then
    <p>Returns: $(item.ret[1])</p>
#   end -- if returns
#   if item.usage then
    <p>Usage:</p>
    <pre><code>$(item.usage[1])</code></pre>
#   end -- if usage
#   if item.see then
    See also: <a href="#$(item.see[1].label)">$(item.see[1].label)</a>

#   end -- if see
# end -- for items
  </dl>
# end -- for kinds
