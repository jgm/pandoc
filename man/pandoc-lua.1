.\" Automatically generated by Pandoc 3.1.5
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "pandoc-lua" "1" "September 22, 2022" "pandoc-lua 3.1.6.2" ""
.hy
.SH SYNOPSIS
.PP
\f[V]pandoc-lua\f[R] [\f[I]options\f[R]] [\f[I]script\f[R]
[\f[I]args\f[R]]]
.SH DESCRIPTION
.PP
\f[V]pandoc-lua\f[R] is a standalone Lua interpreter with behavior
similar to that of the standard \f[V]lua\f[R] executable, but exposing
all of pandoc\[cq]s Lua libraries.
All \f[V]pandoc.*\f[R] packages, as well as the packages \f[V]re\f[R]
and \f[V]lpeg\f[R], are available via global variables.
Furthermore, the globals \f[V]PANDOC_VERSION\f[R],
\f[V]PANDOC_STATE\f[R], and \f[V]PANDOC_API_VERSION\f[R] are set at
startup.
.PP
If no script argument is given, then the script is assumed to be passed
in via \f[I]stdin\f[R].
When called without arguments, \f[V]pandoc-lua\f[R] behaves as
\f[V]pandoc-lua -v -i\f[R] when the standard input (\f[V]stdin\f[R]) is
a terminal, and as \f[V]pandoc-lua -\f[R] otherwise.
On Windows the program will always behave as if it was connected to a
terminal.
.PP
When called without the option \f[V]-E\f[R], the interpreter checks for
an environment variable \f[V]LUA_INIT\f[R] before running any argument.
If the variable content has the format
\f[I]\f[VI]\[at]filename\f[I]\f[R], then \f[V]pandoc-lua\f[R] executes
the file.
Otherwise, \f[V]pandoc-lua\f[R] executes the string itself.
.SH OPTIONS
.TP
\f[V]-e stat\f[R]
Execute statement \f[V]stat\f[R].
.TP
\f[V]-l mod\f[R]
If mod has the pattern \f[V]g=m\f[R], then require library \f[V]m\f[R]
into global \f[V]g\f[R]; otherwise require library \f[V]mod\f[R] into
global \f[V]mod\f[R].
.TP
\f[V]-v\f[R]
Show version information.
.TP
\f[V]-i\f[R]
Enter interactive mode after running \f[I]script\f[R].
.TP
\f[V]-E\f[R]
Ignore environment variables.
This is not fully implemented yet and only ignores the
\f[V]LUA_INIT\f[R] variable.
Other variables like \f[V]LUA_PATH\f[R] and \f[V]LUA_CPATH\f[R] are
\f[B]not\f[R] ignored.
.TP
\f[V]-W\f[R]
Turn warnings on.
.SH INTERACTIVE MODE
.PP
In interactive mode, the Lua interpreter repeatedly prompts and waits
for a line.
After reading a line, Lua first tries to interpret the line as an
expression.
If it succeeds, it prints its value.
Otherwise, it interprets the line as a statement.
If you write an incomplete statement, the interpreter waits for its
completion by issuing a different prompt.
.PP
Exit the interactive mode by pressing \f[V]Ctrl-D\f[R] or
\f[V]Ctrl-C\f[R], or by typing \f[V]os.exit()\f[R].
The \f[I]Isocline\f[R] library is used for line editing.
Press \f[V]F1\f[R] to get a list of available keybindings; the
\f[V]ctrl\f[R] key is abbreviated as \f[V]\[ha]\f[R] in that list.
.SH AUTHORS
.PP
Copyright 2023 John MacFarlane (jgm\[at]berkeley.edu) and contributors.
Released under the GPL, version 2 or later.
This software carries no warranty of any kind.
(See COPYRIGHT for full copyright and warranty notices.)
.PP
Lua: Copyright 1994-2022 Lua.org, PUC-Rio.
